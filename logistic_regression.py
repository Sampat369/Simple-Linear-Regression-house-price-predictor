# -*- coding: utf-8 -*-
"""Logistic regression.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1GoytgD92Uy2pv3j-07wox4rcKhh1lwZA
"""

import pandas as pd
import numpy as np

from google.colab import files
uploaded = files.upload()
df = pd.read_csv("Heart Attack Data Set.csv")

print(df.shape)
df.tail()

df.target.value_counts(normalize=True)*100
#normalize =True means it in ratio,if not written it will only count

import matplotlib.pyplot as plot
import seaborn as sns
sns.countplot(x='target',data=df,palette=['red','black'])
plot.show()

sns.heatmap(df.corr(),annot=True)

df.corr()['target']

df.info()

"""Split into feature (x) and target(y)"""

x=pd.DataFrame(df.iloc[:,:-1])
y=pd.DataFrame(df['target'])

from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=23)

from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=23)

"""Train model"""

from sklearn.linear_model import LogisticRegression
logmodel=LogisticRegression()
logmodel.fit(x_train,y_train)

y_pred=logmodel.predict(x_test)

"""Calculate accuracy"""

print('Accuracy: %d',(logmodel.score(x_train,y_train)))

print('Accuracy: %d',(logmodel.score(x_test,y_test)))

from sklearn.metrics import confusion_matrix
confusion_matrix=confusion_matrix(y_train,logmodel.predict(x_train))
print(confusion_matrix)

